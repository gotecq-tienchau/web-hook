<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Web hook dashboard</title>
  <link rel="stylesheet" href="css/reset.css" />
  <link rel="stylesheet" href="css/web-hook-home.css" />
</head>

<body>
  <main class="container">
    <div class="heading">
      <h1 class="heading-title">Web hook manager</h1>
    </div>
    <div class="content">
      <div class="block">
        <table class="block-table">
          <tr>
            <th class="text-center">Key</th>
            <th>Name</th>
            <th>Trigger URL</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
          <% data.forEach(({hook_id, name, trigger_url, status}) => { %>
          <tr>
            <td><code><%= hook_id %></code></td>
            <td><%= name %></td>
            <td><%= trigger_url %></td>
            <td style="text-align: center;">
              <input type="checkbox" data-id="<%= hook_id %>" <%= status && 'checked' %> name="status">
            </td>
            <td class="table-row-action">
              <i class="fa-solid fa-pen-to-square js-edit-btn" data-hook-id="<%= hook_id %>"></i>
              <i class="fa-solid fa-trash js-delete-btn" data-hook-id="<%= hook_id %>"></i>
            </td>
          </tr>
          <% }) %>
        </table>
      </div>
    </div>
    <a href="#" class="btn-fixed" id="js-modal-action">
      <i class="fa-solid fa-plus"></i>
    </a>
  </main>

  <!-- Modal -->
  <div class="modal-wrap-overlay" id="js-modal-wrap">
    <div class="modal">
      <div class="modal-heading">
        <h2 class="modal-heading-text">Add hook</h2>
      </div>
      <div class="modal-content">
        <form method="post" class="modal-form" id="js-form">
          <table class="form-table">
            <tr class="form-group">
              <th><label for="hook_id" class="form-label">Hook Id </label></th>
              <td>
                <div class="row-overlay">
                  <input type="text" disabled id="hook_id" class="form-input" placeholder="Generating id ...">
                  <i class="fa-solid fa-rotate" id="js-refresh-id"></i>
                </div>
              </td>
            </tr>
            <tr class="form-group">
              <th><label for="hook_name" class="form-label">Hook Name <span class="text-alert">*</span></label></th>
              <td><input type="text" id="hook_name" class="form-input" placeholder="Enter some text..."></td>
            </tr>
            <tr class="form-group">
              <th>
                <label for="hook_trigger_url" class="form-label">Hook Trigger URL <span class="text-alert">*</span></label>
              </th>
              <td><input type="text" id="hook_trigger_url" class="form-input" placeholder="Enter some text..."></td>
            </tr>
            <tr class="form-group">
              <th><label for="hook_status" class="form-label">Hook Active </label></th>
              <td><input type="checkbox" id="hook_status" class="form-checkbox" placeholder="Enter some text..."></td>
            </tr>
          </table>
          <p class="form-message text-alert" id="js-form-message">* Please fill all require fields!</p>
        </form>
      </div>
      <div class="modal-footer">
        <button class="modal-btn primary" id="js-form-submit" type="button">Submit</button>
        <button class="modal-btn danger" id="js-form-cancel" type="button">Cancel</button>
      </div>
    </div>
  </div>
  <!-- End modal -->

  <script src="https://kit.fontawesome.com/9946e2834f.js" crossorigin="anonymous"></script>
  <!-- Main script -->
  <script>
    (() => {
      const handleGetDomEles = (selector) => document.querySelectorAll(selector);
      const API_URL = '/api/web-hook';

      window.addEventListener('load', () => {
        // Update status action
        const statusInputEle = handleGetDomEles('input[name=status]');
        statusInputEle.forEach((element) => {
          element.addEventListener('change', async (e) => {
            const {
              target
            } = e;
            const data = {
              status: target.checked,
              hook_id: target.dataset.id
            };
            const config = {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data)
            };

            try {
              await fetch(API_URL, config);
            } catch (error) {
              console.warn(error);
            }
          })
        })

        // Delete hook action
        const deleteBtnEles = handleGetDomEles('.js-delete-btn');

        deleteBtnEles.forEach((element) => {
          element.addEventListener('click', async (e) => {
            const {
              target
            } = e;
            const confirm = window.confirm('Are you sure?')
            if (!confirm) return

            const data = {
              hook_id: target.dataset.hookId
            };
            const config = {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            };

            try {
              const {
                acknowledged,
                deletedCount
              } = await (await fetch('/api/web-hook', config)).json();

              if (acknowledged || deletedCount) {
                location.reload();
              } else {
                console.log({
                  acknowledged,
                  deletedCount
                });
              }
            } catch (error) {
              console.log(error);
            }
          })
        })
      })
    })()
  </script>
  <!-- End main script -->

  <!-- Modal script -->
  <script>
    (() => {
      const handleGetDomEle = (selector) => document.querySelector(selector);
      const handleGenerateId = async () => (await (await fetch('/api/generate-id')).json()).id

      window.addEventListener('load', async () => {
        const generateId = await handleGenerateId();
        const modalWrapEle = handleGetDomEle('#js-modal-wrap')
        const modalActionEle = handleGetDomEle('#js-modal-action');
        const modalCloseEle = handleGetDomEle('#js-form-cancel');
        const formEle = handleGetDomEle('#js-form');
        const formInputIdEle = handleGetDomEle('[id="hook_id"]');
        const formInputNameEle = handleGetDomEle('[id="hook_name"]');
        const formInputTriggerSiteEle = handleGetDomEle('[id="hook_trigger_url"]');
        const formInputStatusEle = handleGetDomEle('[id="hook_status"]');
        const refreshIdEle = handleGetDomEle('#js-refresh-id');
        formInputIdEle.value = generateId;

        const formSubmitBtnEle = handleGetDomEle('#js-form-submit');
        const formCancelBtnEle = handleGetDomEle('#js-form-cancel');

        refreshIdEle.addEventListener('click', async (e) => {
          e.target.classList.add('fa-spin')
          const newId = await handleGenerateId()
          formInputIdEle.value = newId;
          e.target.classList.remove('fa-spin')
        })

        modalActionEle.addEventListener('click', async (e) => {
          e.preventDefault();
          modalWrapEle.classList.toggle('active');
        });

        modalCloseEle.addEventListener('click', async (e) => {
          modalWrapEle.classList.remove('active');
        });

        formSubmitBtnEle.addEventListener("click", async () => {
          if (!formInputNameEle.value || !formInputTriggerSiteEle.value) {
            handleGetDomEle('#js-form-message').classList.add('active');
            return;
          } else {
            handleGetDomEle('#js-form-message').classList.remove('active');
          }

          const data = {
            hook_id: formInputIdEle.value,
            name: formInputNameEle.value,
            trigger_url: formInputTriggerSiteEle.value,
            status: formInputStatusEle.checked
          }

          const config = {
            method: 'OPTIONS',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          }

          try {
            const dataResponse = await (await fetch('/api/web-hook', config)).json();
            console.log("ðŸš€ ~ file: home.ejs ~ line 168 ~ formSubmitBtnEle.addEventListener ~ dataResponse", dataResponse);

            formEle.reset()
            formInputIdEle.value = await handleGenerateId();
            modalWrapEle.classList.remove('active');
            location.reload();
          } catch (error) {
            console.log("ðŸš€ ~ file: home.ejs ~ line 175 ~ formSubmitBtnEle.addEventListener ~ error", error)
          }
        })
      })
    })()
  </script>
  <!-- End modal script -->
</body>

</html>